{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BigbagService = /*#__PURE__*/(() => {\n  class BigbagService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://127.0.0.1:8000/api'; // Cambia por tu URL de Laravel\n    }\n    // Método para enviar el formulario\n    submitBigBagForm(formData) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      });\n      return this.http.post(`${this.apiUrl}/bigbag`, formData, {\n        headers\n      });\n    }\n    // Método para enviar formulario con archivo (si hay firma)\n    submitBigBagFormWithFile(formData) {\n      const headers = new HttpHeaders({\n        'Accept': 'application/json'\n        // No incluir Content-Type para FormData, Angular lo maneja automáticamente\n      });\n      return this.http.post(`${this.apiUrl}/bigbag`, formData, {\n        headers\n      });\n    }\n    // Método para obtener todos los registros\n    getAllBigBags() {\n      return this.http.get(`${this.apiUrl}/bigbag`);\n    }\n    // Método para obtener un registro por ID\n    getBigBagById(id) {\n      return this.http.get(`${this.apiUrl}/bigbag/${id}`);\n    }\n    // Método para actualizar un registro\n    updateBigBag(id, formData) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      });\n      return this.http.put(`${this.apiUrl}/bigbag/${id}`, formData, {\n        headers\n      });\n    }\n    // Método para eliminar un registro\n    deleteBigBag(id) {\n      return this.http.delete(`${this.apiUrl}/bigbag/${id}`);\n    }\n    static #_ = (() => this.ɵfac = function BigbagService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BigbagService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BigbagService,\n      factory: BigbagService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return BigbagService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}