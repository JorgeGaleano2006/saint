{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BigbagService = /*#__PURE__*/(() => {\n  class BigbagService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiUrl}/api/bigbag`;\n    }\n    /**\n     * Envía los datos del formulario Big Bag a Laravel\n     * @param data - Datos del formulario\n     * @param firmaFile - Archivo de firma del operario (opcional)\n     * @param firmaConductorFile - Archivo de firma del conductor (opcional)\n     * @returns Observable con la respuesta del servidor\n     */\n    enviarDatosBigBag(data, firmaFile, firmaConductorFile) {\n      const formData = new FormData();\n      // Agregar todos los campos del formulario\n      Object.keys(data).forEach(key => {\n        const value = data[key];\n        if (value !== null && value !== undefined && value !== '') {\n          formData.append(key, value.toString());\n        }\n      });\n      // Agregar archivos si existen\n      if (firmaFile) {\n        formData.append('firma', firmaFile);\n      }\n      if (firmaConductorFile) {\n        formData.append('firmaConductor', firmaConductorFile);\n      }\n      // Headers para FormData - no establecer Content-Type manualmente\n      const headers = new HttpHeaders({\n        'Accept': 'application/json'\n      });\n      return this.http.post(this.apiUrl, formData, {\n        headers\n      });\n    }\n    /**\n     * Método alternativo para enviar solo datos JSON (sin archivos)\n     * @param data - Datos del formulario\n     * @returns Observable con la respuesta del servidor\n     */\n    enviarDatosJSON(data) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      });\n      return this.http.post(this.apiUrl, data, {\n        headers\n      });\n    }\n    static #_ = (() => this.ɵfac = function BigbagService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BigbagService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BigbagService,\n      factory: BigbagService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return BigbagService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}